trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  pythonVersion: '3.9'
  dockerRegistryServiceConnection: 'DockerHub'  # El nombre de la conexión de servicio Docker (Docker Hub o ACR)
  dockerRepository: 'wilsong7578/laboratorio11-web'  # Repositorio donde se almacenará la imagen Docker
  appServiceName: 'Laboratorio11'  # Nombre de tu App Service

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(pythonVersion)'
    addToPath: true

- script: |
    python -m venv venv
    source venv/bin/activate
    pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    source venv/bin/activate
    python -m unittest discover -s tests
  displayName: 'Run tests'

- task: Docker@2
  inputs:
    containerRegistry: '$(dockerRegistryServiceConnection)'  # Conexión al registro Docker
    repository: '$(dockerRepository)'  # Nombre del repositorio donde se almacena la imagen Docker
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(Build.BuildId)  # Usamos el ID de la build como etiqueta para la imagen
  displayName: 'Build and push Docker image'

- task: AzureWebApp@1
  inputs:
    appName: '$(appServiceName)'  # Nombre de tu App Service en Azure
    package: '$(Build.ArtifactStagingDirectory)/$(dockerRepository):$(Build.BuildId)'  # Ruta al artefacto Docker
    appSettings: '-DOCKER_CUSTOM_IMAGE_NAME $(dockerRegistryServiceConnection)/$(dockerRepository):$(Build.BuildId)'  # Establecemos la imagen Docker en los settings
  displayName: 'Deploy to Azure App Service'
